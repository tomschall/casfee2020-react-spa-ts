subscription watchNewMessages {
  newMessages: message(order_by: { id: desc }, limit: 1) {
    id
    text
    timestamp
    user {
      username
    }
  }
}

subscription watchMessages($channelId: Int!, $limit: Int = 20) {
  messages: message(
    order_by: { timestamp: desc }
    limit: $limit
    where: { channel: { id: { _eq: $channelId } } }
  ) {
    id
    text
    timestamp
    user {
      username
    }
    channel {
      name
    }
    channel_threads {
      id
    }
  }
}

subscription watchOnlineUsers {
  users: user_online(order_by: { username: asc }) {
    id
    username
    auth0_user_id
  }
}

subscription watchChannels($channel_type: channel_type_enum!) {
  channels: channel(
    where: { channel_type: { _eq: $channel_type } }
    order_by: { name: asc, is_private: asc }
  ) {
    name
    id
    is_private
    owner_id
  }
}

subscription watchDirectMessageChannels(
  $channel_type: channel_type_enum!
  $user_id: String
) {
  channels: channel(
    where: {
      channel_type: { _eq: $channel_type }
      _and: { user_channels: { user_id: { _eq: $user_id } } }
    }
  ) {
    name
    id
    is_private
    owner_id
    user_channels(where: { user_id: { _neq: $user_id } }) {
      user {
        username
        auth0_user_id
      }
    }
  }
}

subscription watchUsers {
  user(order_by: { username: asc }) {
    username
    auth0_user_id
  }
}

subscription watchUsersWhoHaveNotSubscribedToChannel(
  $user_id: String!
  $channel_id: Int!
) {
  user(
    where: {
      _not: { user_channels: { channel_id: { _eq: $channel_id } } }
      auth0_user_id: { _neq: $user_id }
    }
    order_by: { username: asc }
  ) {
    auth0_user_id
    username
  }
}

subscription watchUsersWhoHaveSubscribedToDirectMessageChannel(
  $user_id: String!
) {
  user(
    where: { auth0_user_id: { _neq: $user_id } }
    order_by: { username: asc }
  ) {
    auth0_user_id
    username
    user_channels(
      where: { channel: { channel_type: { _eq: DIRECT_MESSAGE } } }
    ) {
      channel_id
      channel {
        name
      }
    }
  }
}

subscription getUserIsTyping($self_id: String!, $channel_id: Int!) {
  user_typing(
    where: {
      auth0_user_id: { _neq: $self_id }
      _and: { last_typed_channel: { _eq: $channel_id } }
    }
    limit: 1
    order_by: { last_typed: desc }
  ) {
    last_typed
    username
  }
}

subscription WatchGetPollQuestions {
  questions: poll_questions {
    id
    text
    created_at
    updated_at
    owner_id
    is_active
  }
}

subscription watchGetPollQuestion($pollQuestionId: Int) {
  poll_question: poll_questions(where: { id: { _eq: $pollQuestionId } }) {
    id
    text
  }
}

subscription watchGetPollAnswers($pollQuestionId: Int!) {
  poll_answers: poll_anwers(
    where: { poll_question: { id: { _eq: $pollQuestionId } } }
  ) {
    question_id
    text
    id
    votes
  }
}
